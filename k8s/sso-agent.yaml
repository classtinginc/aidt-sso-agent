apiVersion: v1
kind: Service
metadata:
  name: sso-agent
  namespace: aidt
  labels:
    app: sso-agent
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: sso-agent
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/whitelist-source-range: '211.109.168.46/32,15.165.207.230/32,175.45.220.155/32,175.45.220.201/32,210.90.168.113/32,210.90.168.112/32'
  labels:
    app: sso-agent
  name: sso-agent
  namespace: aidt
spec:
  ingressClassName: nginx
  rules:
  - host: sso.aidt.classting.dev
    http:
      paths:
      - backend:
          service: 
            name: sso-agent
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  tls:
    - hosts:
      - sso.aidt.classting.dev
      secretName: sso-agent-endpoint-cert

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sso-agent
  namespace: aidt
  labels:
    app: sso-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sso-agent
  template:
    metadata:
      labels:
        app: sso-agent
    spec:
      imagePullSecrets:
        - name: ncloud-reg-cred
      containers:
        - name: sso-agent-js
          image: aidt-container-registry.ncr.gov-ntruss.com/sso-agent-js:v0.0.91
          imagePullPolicy: Always
          ports:
          - containerPort: 80
        - name: sso-agent-spring
          image: aidt-container-registry.ncr.gov-ntruss.com/sso-agent-spring:v0.0.91
          imagePullPolicy: Always
          ports:
          - containerPort: 8084
